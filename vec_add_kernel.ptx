//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	vectorAdd               // -- Begin function vectorAdd
                                        // @vectorAdd
.visible .entry vectorAdd(
	.param .u64 vectorAdd_param_0,
	.param .u64 vectorAdd_param_1,
	.param .u64 vectorAdd_param_2,
	.param .u32 vectorAdd_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<11>;

// %bb.0:                               // %entry
	ld.param.u32 	%r1, [vectorAdd_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mad.lo.s32 	%r5, %r3, %r4, %r2;
	setp.ge.s32 	%p1, %r5, %r1;
	@%p1 bra 	$L__BB0_2;
// %bb.1:                               // %if.then
	ld.param.u64 	%rd4, [vectorAdd_param_0];
	ld.param.u64 	%rd5, [vectorAdd_param_2];
	cvta.to.global.u64 	%rd6, %rd5;
	ld.param.u64 	%rd7, [vectorAdd_param_1];
	cvta.to.global.u64 	%rd8, %rd7;
	cvta.to.global.u64 	%rd9, %rd4;
	mul.wide.s32 	%rd10, %r5, 4;
	add.s64 	%rd1, %rd9, %rd10;
	add.s64 	%rd2, %rd8, %rd10;
	add.s64 	%rd3, %rd6, %rd10;
	ld.global.f32 	%f1, [%rd1];
	ld.global.f32 	%f2, [%rd2];
	add.rn.f32 	%f3, %f1, %f2;
	st.global.f32 	[%rd3], %f3;
$L__BB0_2:                              // %if.end
	ret;
                                        // -- End function
}
